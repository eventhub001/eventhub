{"ast":null,"code":"import * as THREE from 'three';\nimport { Side } from './3dtypes';\nexport class DebuggingUtils {\n  static centerPoint() {\n    const center = new THREE.Vector3(0, 0, 0);\n    const dot = new THREE.Mesh(new THREE.SphereGeometry(0.1), new THREE.MeshBasicMaterial({\n      color: 0xff0000\n    }));\n    dot.position.copy(center);\n    return dot;\n  }\n  static showPoint(point, scene, color) {\n    const dot = new THREE.Mesh(new THREE.SphereGeometry(0.1), new THREE.MeshBasicMaterial({\n      color: color\n    }));\n    dot.position.copy(point);\n    scene.add(dot);\n  }\n  static showBoundingBox(model, scene) {\n    const box = new THREE.Box3().setFromObject(model);\n    const boxHelper = new THREE.Box3Helper(box, 0xffff00);\n    const center = box.getCenter(new THREE.Vector3());\n    const centerSphere = new THREE.SphereGeometry(0.1);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x000ff\n    });\n    const centerBB = new THREE.Mesh(centerSphere, material);\n    centerBB.position.copy(center);\n    scene.add(centerBB);\n    scene.add(boxHelper);\n  }\n  static showSide(model, side, scene) {\n    if (side === Side.TOP) {\n      const arrowHelper = new THREE.ArrowHelper(model.initialOrientation.top, new THREE.Vector3(model.x, model.y, model.z), 1, 0xff0000);\n      scene.add(arrowHelper);\n    } else if (side === Side.BOTTOM) {\n      const arrowHelper = new THREE.ArrowHelper(model.initialOrientation.bottom, new THREE.Vector3(model.x, model.y, model.z), 1, 0xff0000);\n      scene.add(arrowHelper);\n    } else if (side === Side.LEFT) {\n      const arrowHelper = new THREE.ArrowHelper(model.initialOrientation.left, new THREE.Vector3(model.x, model.y, model.z), 1, 0xff0000);\n      scene.add(arrowHelper);\n    } else if (side === Side.RIGHT) {\n      const arrowHelper = new THREE.ArrowHelper(model.initialOrientation.right, new THREE.Vector3(model.x, model.y, model.z), 1, 0xff0000);\n      scene.add(arrowHelper);\n    } else if (side === Side.FRONT) {\n      const arrowHelper = new THREE.ArrowHelper(model.initialOrientation.front, new THREE.Vector3(model.x, model.y, model.z), 1, 0xff0000);\n      scene.add(arrowHelper);\n    } else if (side === Side.BACK) {\n      const arrowHelper = new THREE.ArrowHelper(model.initialOrientation.back, new THREE.Vector3(model.x, model.y, model.z), 1, 0xff0000);\n      scene.add(arrowHelper);\n    }\n  }\n  static drawDot(point, scene, color) {\n    const dot = new THREE.Mesh(new THREE.SphereGeometry(0.1), new THREE.MeshBasicMaterial({\n      color: color\n    }));\n    dot.position.copy(point);\n    scene.add(dot);\n  }\n  static showLights(scene) {\n    scene.traverse(obj => {\n      if (obj.type === \"SpotLight\" || obj.type === \"DirectionalLight\" || obj.type === \"PointLight\" || obj.type === \"HemisphereLight\" || obj.type === \"AmbientLight\" || obj.type === \"SpotLight\") {\n        //scene.remove(obj)\n        console.log(obj);\n      }\n    });\n  }\n}\nexport class ModelThreeDObject {\n  constructor(model, fixCenter = true) {\n    this.model = model;\n    if (fixCenter) {\n      this.boundingBox = new THREE.Box3().setFromObject(this.model);\n      this.center = this.boundingBox.getCenter(new THREE.Vector3());\n      this.fixCenter();\n    }\n  }\n  static fromGLTF(gltf, removeLights = true) {\n    const threeobject = new ModelThreeDObject(gltf, true);\n    threeobject.model.traverse(child => {\n      if (removeLights) {\n        if (child instanceof THREE.SpotLight) {\n          threeobject.model.remove(child);\n        }\n      }\n    });\n    return threeobject;\n  }\n  fixCenter() {\n    this.pivot = new THREE.Object3D();\n    this.pivot.position.set(this.center.x, this.center.y, this.center.z);\n    this.model.position.set(-this.center.x, -this.center.y, -this.center.z);\n    this.pivot.add(this.model);\n    return this.pivot;\n  }\n}\n// I need to create the class but in some way it needs to load the model in parallel, the thing is... that in the constructor.","map":{"version":3,"names":["THREE","Side","DebuggingUtils","centerPoint","center","Vector3","dot","Mesh","SphereGeometry","MeshBasicMaterial","color","position","copy","showPoint","point","scene","add","showBoundingBox","model","box","Box3","setFromObject","boxHelper","Box3Helper","getCenter","centerSphere","material","centerBB","showSide","side","TOP","arrowHelper","ArrowHelper","initialOrientation","top","x","y","z","BOTTOM","bottom","LEFT","left","RIGHT","right","FRONT","front","BACK","back","drawDot","showLights","traverse","obj","type","console","log","ModelThreeDObject","constructor","fixCenter","boundingBox","fromGLTF","gltf","removeLights","threeobject","child","SpotLight","remove","pivot","Object3D","set"],"sources":["C:\\Users\\v-zacharyhe\\Documents\\GitHub\\eventhub\\frontend\\src\\app\\test\\3dobjects.ts"],"sourcesContent":["import * as THREE from 'three';\r\nimport { Position, Side } from './3dtypes';\r\nimport { Asset } from '../interfaces';\r\n\r\nexport type AxisOrientation = {\r\n    top: THREE.Vector3,\r\n    right: THREE.Vector3,\r\n    front: THREE.Vector3\r\n}\r\n\r\nexport type Size  = {\r\n    width: number,\r\n    height: number,\r\n    depth: number\r\n}\r\n\r\nexport class DebuggingUtils {\r\n    public static centerPoint() : THREE.Mesh {\r\n        const center = new THREE.Vector3(0, 0, 0);\r\n\r\n        const dot = new THREE.Mesh(\r\n            new THREE.SphereGeometry(0.1),\r\n            new THREE.MeshBasicMaterial({ color: 0xff0000 })\r\n        );\r\n\r\n        dot.position.copy(center);\r\n\r\n        return dot;\r\n    }\r\n\r\n    public static showPoint(point: THREE.Vector3, scene: THREE.Scene, color: string) : void {\r\n        const dot = new THREE.Mesh(\r\n            new THREE.SphereGeometry(0.1),\r\n            new THREE.MeshBasicMaterial({ color: color })\r\n        );\r\n\r\n        dot.position.copy(point);\r\n\r\n        scene.add(dot);\r\n    }\r\n\r\n    public static showBoundingBox(model: THREE.Object3D, scene: THREE.Scene) : void {\r\n        const box = new THREE.Box3().setFromObject(model);\r\n        const boxHelper = new THREE.Box3Helper(box, 0xffff00);\r\n\r\n        const center = box.getCenter(new THREE.Vector3());\r\n        const centerSphere = new THREE.SphereGeometry(0.1);\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x000ff });\r\n        const centerBB = new THREE.Mesh(centerSphere, material);\r\n        centerBB.position.copy(center);\r\n\r\n        scene.add(centerBB);\r\n        scene.add(boxHelper);\r\n    }\r\n\r\n    public static showSide(model: Asset, side: Side, scene: THREE.Scene) {\r\n        if (side === Side.TOP) {\r\n            const arrowHelper = new THREE.ArrowHelper(model.initialOrientation.top, new THREE.Vector3(model.x, model.y, model.z), 1, 0xff0000);\r\n            scene.add(arrowHelper);\r\n        }\r\n        else if (side === Side.BOTTOM) {\r\n            const arrowHelper = new THREE.ArrowHelper(model.initialOrientation.bottom, new THREE.Vector3(model.x, model.y, model.z), 1, 0xff0000);\r\n            scene.add(arrowHelper);\r\n        }\r\n        else if (side === Side.LEFT) {\r\n            const arrowHelper = new THREE.ArrowHelper(model.initialOrientation.left, new THREE.Vector3(model.x, model.y, model.z), 1, 0xff0000);\r\n            scene.add(arrowHelper);\r\n        }\r\n        else if (side === Side.RIGHT) {\r\n            const arrowHelper = new THREE.ArrowHelper(model.initialOrientation.right, new THREE.Vector3(model.x, model.y, model.z), 1, 0xff0000);\r\n            scene.add(arrowHelper);\r\n        }\r\n        else if (side === Side.FRONT) {\r\n            const arrowHelper = new THREE.ArrowHelper(model.initialOrientation.front, new THREE.Vector3(model.x, model.y, model.z), 1, 0xff0000);\r\n            scene.add(arrowHelper);\r\n        }\r\n        else if (side === Side.BACK) {\r\n            const arrowHelper = new THREE.ArrowHelper(model.initialOrientation.back, new THREE.Vector3(model.x, model.y, model.z), 1, 0xff0000);\r\n            scene.add(arrowHelper);\r\n        }\r\n    }\r\n\r\n    public static drawDot(point: THREE.Vector3, scene: THREE.Scene, color: string) {\r\n        const dot = new THREE.Mesh(\r\n            new THREE.SphereGeometry(0.1),\r\n            new THREE.MeshBasicMaterial({ color: color })\r\n        );\r\n\r\n        dot.position.copy(point);\r\n\r\n        scene.add(dot);\r\n    }\r\n\r\n    public static showLights(scene: THREE.Object3D) {\r\n        scene.traverse((obj) => {\r\n            if (obj.type === \"SpotLight\" || obj.type === \"DirectionalLight\" || obj.type === \"PointLight\" || obj.type === \"HemisphereLight\" || obj.type === \"AmbientLight\" || obj.type === \"SpotLight\") {\r\n              //scene.remove(obj)\r\n              console.log(obj);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport class ModelThreeDObject {\r\n\r\n    boundingBox!: THREE.Box3;\r\n    center!: THREE.Vector3;\r\n    pivot!: THREE.Object3D;\r\n\r\n    model!: THREE.Object3D;\r\n\r\n    constructor(model: THREE.Object3D, fixCenter: Boolean = true) {\r\n        this.model = model;\r\n\r\n        if (fixCenter) {            \r\n            this.boundingBox = new THREE.Box3().setFromObject(this.model);\r\n            this.center = this.boundingBox.getCenter(new THREE.Vector3());\r\n\r\n            this.fixCenter();\r\n        }\r\n    }\r\n\r\n    public static fromGLTF(gltf: THREE.Object3D, removeLights: Boolean = true) : ModelThreeDObject {\r\n        const threeobject = new ModelThreeDObject(gltf, true);\r\n        threeobject.model.traverse((child) => {\r\n            \r\n            if (removeLights) {\r\n                if (child instanceof THREE.SpotLight) {\r\n                    threeobject.model.remove(child);\r\n                }\r\n            }\r\n        });\r\n        \r\n        return threeobject;\r\n    }\r\n\r\n    private fixCenter(): THREE.Object3D {\r\n        this.pivot = new THREE.Object3D();\r\n        this.pivot.position.set(this.center.x, this.center.y, this.center.z);\r\n        this.model.position.set(-this.center.x, -this.center.y, -this.center.z);\r\n\r\n        this.pivot.add(this.model);\r\n        return this.pivot;\r\n    }\r\n}\r\n\r\n// I need to create the class but in some way it needs to load the model in parallel, the thing is... that in the constructor. \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}