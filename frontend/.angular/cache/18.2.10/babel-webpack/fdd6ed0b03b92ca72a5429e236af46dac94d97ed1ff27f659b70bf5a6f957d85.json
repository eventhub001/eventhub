{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/v-zacharyhe/Documents/GitHub/eventhub/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { inject } from '@angular/core';\nimport * as THREE from 'three';\nimport { getWindow } from 'ssr-window';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DebuggingUtils } from './3dobjects';\nimport { Side } from './3dtypes';\nimport { MetricType, EventGrid } from './events';\nimport { Floor } from '../models/floor.model';\nimport { Chair } from '../models/chair.model';\nimport { ChairSet, Event3DManager, Direction } from './event3dmanager';\nimport { PLATFORM_ID } from '@angular/core';\nimport { Ui3DComponent } from '../ui3d/ui3d.component';\nimport { ModelService } from '../services/model/model.service';\nimport { AuthService } from '../services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"mainThreeCv\"];\nfunction TestComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TestComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-ui3d\", 4);\n    i0.ɵɵlistener(\"AdditionAction\", function TestComponent_div_4_Template_app_ui3d_AdditionAction_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.addComponent($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"images\", ctx_r1.images)(\"modelMetadata\", ctx_r1.modelMetadata);\n  }\n}\nexport class TestComponent {\n  constructor(http, platformId) {\n    this.http = http;\n    this.platformId = platformId;\n    this.modelMetadata = [];\n    this.images = [];\n    this.modelService = inject(ModelService);\n    this.authService = inject(AuthService);\n    this.isLoading = true;\n  }\n  addComponent(addtion) {\n    console.log(\"Row: \" + addtion.z);\n    console.log(\"Col: \" + addtion.x);\n    this.eventManager.add(this.defaultChair, addtion.x, 0, addtion.z);\n    this.eventManager.render(this.scene);\n  }\n  addRenderingHelpers() {\n    // add rendering helpers here\n    this.orbitCamera = new OrbitControls(this.camera, this.renderer.domElement);\n    const axesHelper = new THREE.AxesHelper(5);\n    //this.scene.add(axesHelper);\n  }\n  setupComponents() {\n    this.scene = new THREE.Scene();\n    this.scene.background = new THREE.Color(0x87ceeb);\n    this.scene.backgroundBlurriness = 0.5;\n    const light = new THREE.AmbientLight(0xffffff, 0.3);\n    this.scene.add(light);\n    const light2 = new THREE.DirectionalLight(0xffffff, 6);\n    light2.position.set(0, 3, 0);\n    light2.target.position.set(-4, -1, 0);\n    light2.castShadow = true;\n    light2.shadow.camera = new THREE.OrthographicCamera(-100, 100, 100, -100, 0.5, 1000);\n    light2.shadow.mapSize.width = 1024;\n    light2.shadow.mapSize.height = 1024;\n    // light2.shadow.bias = -0.001;\n    this.scene.add(light2);\n    this.scene.add(light2.target);\n    this.camera = new THREE.PerspectiveCamera(50, getWindow().innerWidth / getWindow().innerHeight, 0.1, 500);\n    this.camera.position.y = 5;\n    this.camera.position.z = 5;\n    const canvas = this.mainThreeCv.nativeElement;\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: true\n    });\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this.renderer.setSize(getWindow().innerWidth / 1.4, getWindow().innerHeight / 1.2);\n  }\n  ngOnChanges(changes) {\n    console.log(\"modelMetadata\", this.modelMetadata);\n    console.log(\"images\", this.images);\n    if (changes[\"images\"]) {\n      if (this.images.length > 0) {\n        this.isLoading = false;\n        console.log('finished loading');\n      }\n    }\n  }\n  ngAfterViewInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      //new zim.Frame(zim.FIT, 800, 600, \"#ff0000\", 1);\n      _this.setupComponents();\n      _this.grid = new EventGrid(20, 3, 15, MetricType.Meters);\n      // resize canvas on half the size\n      _this.addRenderingHelpers();\n      const token = _this.authService.getAccessToken();\n      const floor = yield Floor.createFromModel(20, 15, token, 1, {\n        x: 0,\n        y: 0,\n        z: 0\n      }, _this.http, {\n        front: new THREE.Vector3(1, 0, 0),\n        right: new THREE.Vector3(1, 0, 0),\n        top: new THREE.Vector3(0, 1, 0)\n      });\n      DebuggingUtils.showSide(floor, Side.TOP, _this.scene);\n      const chair = yield Chair.createFromModel(token, 1, {\n        width: 1.2711153278258065,\n        height: 2.3832655070864464,\n        depth: 1.0580182533765168\n      }, {\n        x: 0,\n        y: 0,\n        z: 0\n      }, _this.http, {\n        front: new THREE.Vector3(0, 0, 1),\n        right: new THREE.Vector3(0, 0, 1),\n        top: new THREE.Vector3(0, 1, 0)\n      });\n      _this.defaultChair = chair;\n      const table = yield Chair.createFromModel(token, 11, {\n        width: 1.2711153278258065,\n        height: 2.3832655070864464,\n        depth: 1.0580182533765168\n      }, {\n        x: 0,\n        y: 0,\n        z: 0\n      }, _this.http, {\n        front: new THREE.Vector3(0, 0, 1),\n        right: new THREE.Vector3(0, 0, 1),\n        top: new THREE.Vector3(0, 1, 0)\n      });\n      DebuggingUtils.showLights(floor.content);\n      _this.scene.add(_this.grid.model);\n      _this.set = new ChairSet(\"left\", _this.grid, chair);\n      _this.set.add({\n        col: chair.x,\n        floor: chair.y,\n        row: chair.z,\n        grid: _this.grid,\n        direction1: Direction.FRONT\n      });\n      _this.set.add({\n        col: chair.x + 2,\n        floor: chair.y,\n        row: chair.z,\n        grid: _this.grid,\n        direction1: Direction.FRONT\n      });\n      //   chairSet.add({\n      //     x: chair.x,\n      //     y: chair.y,\n      //     z: chair.z,\n      //     grid: this.grid,\n      //     direction1: Direction.FRONT});\n      // chairSet.add({\n      //   x: chair.x,\n      //   y: chair.y,\n      //   z: chair.z,\n      //   grid: this.grid,\n      //   direction1: Direction.RIGHT});\n      // chairSet.add({\n      //   x: chair.x,\n      //   y: chair.y,\n      //   z: chair.z + 1,\n      //   grid: this.grid,\n      //   direction1: Direction.RIGHT});\n      // chairSet.add({\n      //   x: chair.x,\n      //   y: chair.y,\n      //   z: chair.z + 2,\n      //   grid: this.grid,\n      //   direction1: Direction.RIGHT});\n      // chairSet.add({\n      //   x: chair.x,\n      //   y: chair.y,\n      //   z: chair.z + 3,\n      //   grid: this.grid,\n      //   direction1: Direction.RIGHT});\n      // chairSet.add({\n      //   x: chair.x,\n      //   y: chair.y,\n      //   z: chair.z + 2,\n      //   grid: this.grid,\n      //   direction1: Direction.FRONT});\n      // chairSet.add({\n      //   x: chair.x + 2,\n      //   y: chair.y,\n      //   z: chair.z + 2,\n      //   grid: this.grid,\n      //   direction1: Direction.FRONT});\n      _this.eventManager = new Event3DManager(_this.grid);\n      _this.eventManager.addSet(_this.set);\n      //this.eventManager.printAssets();\n      _this.eventManager.render(_this.scene);\n      DebuggingUtils.showBoundingBox(floor.content, _this.scene);\n      const box = new THREE.Box3().setFromObject(floor.content);\n      //this.grid.moveAssetTo(chair, 2, 0, 0, Side.CENTER, Side.BOTTOM);\n      //this.grid.moveAssetTo(chair2, 0, 0, 0, Side.CENTER, Side.BOTTOM);\n      // DebuggingUtils.showBoundingBox(chair.content, this.scene);\n      // DebuggingUtils.showBoundingBox(chair2.content, this.scene);\n      _this.scene.add(floor.content);\n      //this.scene.add(chair.content);\n      //this.scene.add(chair2.content);\n      //this.grid.hide();\n      //DebuggingUtils.showBoundingBox(floor.content, this.scene);\n      //this.scene.add(center);\n      const animate = () => {\n        requestAnimationFrame(animate);\n        _this.camera.updateProjectionMatrix();\n        _this.renderer.render(_this.scene, _this.camera);\n        _this.orbitCamera.update();\n      };\n      animate();\n    })();\n  }\n  static {\n    this.ɵfac = function TestComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TestComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(PLATFORM_ID));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TestComponent,\n      selectors: [[\"app-test\"]],\n      viewQuery: function TestComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mainThreeCv = _t.first);\n        }\n      },\n      inputs: {\n        modelMetadata: \"modelMetadata\",\n        images: \"images\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([HttpClientModule]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 5,\n      vars: 2,\n      consts: [[\"mainThreeCv\", \"\"], [1, \"container\"], [\"width\", \"20px\", 1, \"main-three\"], [4, \"ngIf\"], [3, \"AdditionAction\", \"images\", \"modelMetadata\"]],\n      template: function TestComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1);\n          i0.ɵɵelement(1, \"canvas\", 2, 0);\n          i0.ɵɵtemplate(3, TestComponent_div_3_Template, 2, 0, \"div\", 3)(4, TestComponent_div_4_Template, 2, 2, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        }\n      },\n      dependencies: [HttpClientModule, Ui3DComponent, CommonModule, i2.NgIf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \".container[_ngcontent-%COMP%] {\\n        display: flex;\\n        flex-direction: row;\\n    }\"]\n    });\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TestComponent,\n      factory: TestComponent.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["inject","THREE","getWindow","OrbitControls","HttpClientModule","DebuggingUtils","Side","MetricType","EventGrid","Floor","Chair","ChairSet","Event3DManager","Direction","PLATFORM_ID","Ui3DComponent","ModelService","AuthService","CommonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TestComponent_div_4_Template_app_ui3d_AdditionAction_1_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","addComponent","ɵɵadvance","ɵɵproperty","images","modelMetadata","TestComponent","constructor","http","platformId","modelService","authService","isLoading","addtion","console","log","z","x","eventManager","add","defaultChair","render","scene","addRenderingHelpers","orbitCamera","camera","renderer","domElement","axesHelper","AxesHelper","setupComponents","Scene","background","Color","backgroundBlurriness","light","AmbientLight","light2","DirectionalLight","position","set","target","castShadow","shadow","OrthographicCamera","mapSize","width","height","PerspectiveCamera","innerWidth","innerHeight","y","canvas","mainThreeCv","nativeElement","WebGLRenderer","antialias","shadowMap","enabled","type","PCFSoftShadowMap","setSize","ngOnChanges","changes","length","ngAfterViewInit","_this","_asyncToGenerator","grid","Meters","token","getAccessToken","floor","createFromModel","front","Vector3","right","top","showSide","TOP","chair","depth","table","showLights","content","model","col","row","direction1","FRONT","addSet","showBoundingBox","box","Box3","setFromObject","animate","requestAnimationFrame","updateProjectionMatrix","update","ɵɵdirectiveInject","i1","HttpClient","selectors","viewQuery","TestComponent_Query","rf","ctx","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","TestComponent_Template","ɵɵelement","ɵɵtemplate","TestComponent_div_3_Template","TestComponent_div_4_Template","i2","NgIf","styles","factory","ɵfac","providedIn"],"sources":["C:\\Users\\v-zacharyhe\\Documents\\GitHub\\eventhub\\frontend\\src\\app\\test\\test.component.ts","C:\\Users\\v-zacharyhe\\Documents\\GitHub\\eventhub\\frontend\\src\\app\\test\\test.component.html"],"sourcesContent":["import { afterRender, AfterRenderRef, Component, ElementRef, inject, Input, SimpleChange, SimpleChanges, ViewChild } from '@angular/core';\r\nimport * as THREE from 'three';\r\nimport { getWindow } from 'ssr-window';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { DebuggingUtils } from './3dobjects';\r\nimport { Side } from './3dtypes';\r\nimport { MetricType, EventGrid } from './events';\r\nimport { Floor } from '../models/floor.model';\r\nimport { Chair } from '../models/chair.model';\r\nimport { ChairSet, Event3DManager, Direction } from './event3dmanager';\r\nimport { Injectable, PLATFORM_ID, Inject } from '@angular/core';\r\nimport { Ui3DComponent } from '../ui3d/ui3d.component';\r\nimport * as UICommand from '../ui3d/commands/commands';\r\nimport { ModelService } from '../services/model/model.service';\r\nimport { AssetModel } from '../interfaces';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  standalone: true,\r\n  imports: [HttpClientModule, Ui3DComponent, CommonModule],\r\n  providers: [HttpClientModule],\r\n  templateUrl: './test.component.html',\r\n  styleUrl: './test.component.css'\r\n})\r\nexport class TestComponent {\r\n\r\n  @ViewChild(\"mainThreeCv\", {static: false}) mainThreeCv!: ElementRef<HTMLCanvasElement>;\t\r\n  @Input() modelMetadata: AssetModel[] = [];\r\n  @Input() images: Blob[] = [];\r\n  modelService: ModelService = inject(ModelService);\r\n  renderer!: THREE.WebGLRenderer;\r\n  scene!: THREE.Scene;\r\n  camera!: THREE.PerspectiveCamera;\r\n  orbitCamera!: OrbitControls;\r\n  grid!: EventGrid;\r\n  eventManager!: Event3DManager;\r\n  authService: AuthService = inject(AuthService);\r\n  set!: ChairSet;\r\n  isLoading: boolean = true;\r\n\r\n  // debugging properties. Must remove later.\r\n  defaultChair!: Chair;\r\n\r\n  constructor(private http: HttpClient, @Inject(PLATFORM_ID) private platformId: Object) {\r\n\r\n  }\r\n\r\n  public addComponent(addtion: UICommand.addtion) {\r\n    \r\n\r\n    console.log(\"Row: \" + addtion.z);\r\n    console.log(\"Col: \" + addtion.x);\r\n\r\n    this.eventManager.add(this.defaultChair, addtion.x, 0, addtion.z);\r\n\r\n    this.eventManager.render(this.scene);\r\n\r\n  }\r\n\r\n  addRenderingHelpers() {\r\n    // add rendering helpers here\r\n    this.orbitCamera = new OrbitControls(this.camera, this.renderer.domElement);\r\n    const axesHelper = new THREE.AxesHelper(5);\r\n    //this.scene.add(axesHelper);\r\n  }\r\n\r\n  setupComponents() {\r\n\r\n    this.scene = new THREE.Scene();\r\n    this.scene.background = new THREE.Color(0x87ceeb);\r\n    this.scene.backgroundBlurriness = 0.5;\r\n\r\n    const light = new THREE.AmbientLight(0xffffff, 0.3);\r\n    this.scene.add(light);\r\n    const light2 = new THREE.DirectionalLight(0xffffff, 6);\r\n\r\n    light2.position.set(0, 3, 0);\r\n    light2.target.position.set(-4, -1, 0); \r\n    light2.castShadow = true;\r\n\r\n    light2.shadow.camera = new THREE.OrthographicCamera( -100, 100, 100, -100, 0.5, 1000 ); \r\n    light2.shadow.mapSize.width = 1024;\r\n    light2.shadow.mapSize.height = 1024;\r\n    // light2.shadow.bias = -0.001;\r\n\r\n    this.scene.add(light2);\r\n    this.scene.add(light2.target);\r\n    \r\n    this.camera = new THREE.PerspectiveCamera( 50, getWindow().innerWidth / getWindow().innerHeight, 0.1, 500 );\r\n\r\n    this.camera.position.y = 5;\r\n    this.camera.position.z = 5;\r\n\r\n    const canvas = this.mainThreeCv.nativeElement;\r\n    this.renderer = new THREE.WebGLRenderer({canvas: canvas, antialias: true});\r\n    this.renderer.shadowMap.enabled = true;\r\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n    this.renderer.setSize( getWindow().innerWidth / 1.4, getWindow().innerHeight / 1.2);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    console.log(\"modelMetadata\", this.modelMetadata);\r\n    console.log(\"images\", this.images);\r\n    if (changes[\"images\"]) {\r\n      if (this.images.length > 0) {\r\n        this.isLoading = false;\r\n        console.log('finished loading');\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n    //new zim.Frame(zim.FIT, 800, 600, \"#ff0000\", 1);\r\n    this.setupComponents();\r\n\r\n    this.grid = new EventGrid(20, 3, 15, MetricType.Meters);\r\n\r\n    // resize canvas on half the size\r\n    this.addRenderingHelpers();\r\n\r\n    \r\n    const token = this.authService.getAccessToken();\r\n\r\n    const floor = await Floor.createFromModel(20, 15,\r\n      token!,\r\n      1,\r\n      {x: 0, y: 0, z: 0},\r\n      this.http,\r\n      {front: new THREE.Vector3(1, 0, 0), right: new THREE.Vector3(1, 0, 0), top: new THREE.Vector3(0, 1, 0)});\r\n\r\n    DebuggingUtils.showSide(floor, Side.TOP, this.scene);\r\n\r\n    const chair = await Chair.createFromModel(\r\n      token!,\r\n      1,\r\n      {width: 1.2711153278258065, height:2.3832655070864464, depth: 1.0580182533765168},\r\n      {x: 0, y: 0, z: 0},\r\n      this.http,\r\n      {front: new THREE.Vector3(0, 0, 1), right: new THREE.Vector3(0, 0, 1), top: new THREE.Vector3(0, 1, 0)}\r\n    );\r\n\r\n    this.defaultChair = chair;\r\n\r\n    const table = await Chair.createFromModel(\r\n      token!,\r\n      11,\r\n      {width: 1.2711153278258065, height:2.3832655070864464, depth: 1.0580182533765168},\r\n      {x: 0, y: 0, z: 0},\r\n      this.http,\r\n      {front: new THREE.Vector3(0, 0, 1), right: new THREE.Vector3(0, 0, 1), top: new THREE.Vector3(0, 1, 0)}\r\n    );\r\n\r\n    DebuggingUtils.showLights(floor.content);\r\n\r\n    this.scene.add(this.grid.model);\r\n\r\n    this.set = new ChairSet(\"left\", this.grid, chair);\r\n\r\n    this.set.add({\r\n      col: chair.x,\r\n      floor: chair.y,\r\n      row: chair.z,\r\n      grid: this.grid,\r\n      direction1: Direction.FRONT});\r\n\r\n    this.set.add({\r\n      col: chair.x + 2,\r\n      floor: chair.y,\r\n      row: chair.z,\r\n      grid: this.grid,\r\n      direction1: Direction.FRONT});\r\n    \r\n    //   chairSet.add({\r\n    //     x: chair.x,\r\n    //     y: chair.y,\r\n    //     z: chair.z,\r\n    //     grid: this.grid,\r\n    //     direction1: Direction.FRONT});\r\n\r\n    // chairSet.add({\r\n    //   x: chair.x,\r\n    //   y: chair.y,\r\n    //   z: chair.z,\r\n    //   grid: this.grid,\r\n    //   direction1: Direction.RIGHT});\r\n\r\n    // chairSet.add({\r\n    //   x: chair.x,\r\n    //   y: chair.y,\r\n    //   z: chair.z + 1,\r\n    //   grid: this.grid,\r\n    //   direction1: Direction.RIGHT});\r\n\r\n    // chairSet.add({\r\n    //   x: chair.x,\r\n    //   y: chair.y,\r\n    //   z: chair.z + 2,\r\n    //   grid: this.grid,\r\n    //   direction1: Direction.RIGHT});\r\n\r\n    // chairSet.add({\r\n    //   x: chair.x,\r\n    //   y: chair.y,\r\n    //   z: chair.z + 3,\r\n    //   grid: this.grid,\r\n    //   direction1: Direction.RIGHT});\r\n\r\n    // chairSet.add({\r\n    //   x: chair.x,\r\n    //   y: chair.y,\r\n    //   z: chair.z + 2,\r\n    //   grid: this.grid,\r\n    //   direction1: Direction.FRONT});\r\n\r\n    // chairSet.add({\r\n    //   x: chair.x + 2,\r\n    //   y: chair.y,\r\n    //   z: chair.z + 2,\r\n    //   grid: this.grid,\r\n    //   direction1: Direction.FRONT});\r\n\r\n    \r\n    this.eventManager = new Event3DManager(this.grid);\r\n    this.eventManager.addSet(this.set); \r\n    //this.eventManager.printAssets();\r\n    this.eventManager.render(this.scene);\r\n\r\n    DebuggingUtils.showBoundingBox(floor.content, this.scene);\r\n    const box = new THREE.Box3().setFromObject(floor.content);\r\n\r\n    //this.grid.moveAssetTo(chair, 2, 0, 0, Side.CENTER, Side.BOTTOM);\r\n    //this.grid.moveAssetTo(chair2, 0, 0, 0, Side.CENTER, Side.BOTTOM);\r\n\r\n    // DebuggingUtils.showBoundingBox(chair.content, this.scene);\r\n    // DebuggingUtils.showBoundingBox(chair2.content, this.scene);\r\n\r\n    this.scene.add(floor.content);\r\n    //this.scene.add(chair.content);\r\n    //this.scene.add(chair2.content);\r\n\r\n    //this.grid.hide();\r\n\r\n    //DebuggingUtils.showBoundingBox(floor.content, this.scene);\r\n    //this.scene.add(center);\r\n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      this.camera.updateProjectionMatrix();\r\n      this.renderer.render(this.scene, this.camera);\r\n      this.orbitCamera.update();\r\n    };\r\n\r\n    animate();\r\n  }\r\n}\r\n","<style >\r\n    .container {\r\n        display: flex;\r\n        flex-direction: row;\r\n    }\r\n</style>\r\n<div class=\"container\">\r\n    <canvas class=\"main-three\" #mainThreeCv width=\"20px\"></canvas>\r\n    <div *ngIf=\"isLoading\">Loading...</div>\r\n    <div *ngIf=\"!isLoading\">\r\n        <app-ui3d\r\n        (AdditionAction)=\"addComponent($event)\"\r\n        [images]=\"images\"\r\n        [modelMetadata]=\"modelMetadata\"\r\n        ></app-ui3d>\r\n    </div>\r\n    <!-- @else {    \r\n        <app-ui3d\r\n        (AdditionAction)=\"addComponent($event)\"\r\n        [modelMetadata]=\"modelMetadata\"\r\n        ></app-ui3d>\r\n    } -->\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}