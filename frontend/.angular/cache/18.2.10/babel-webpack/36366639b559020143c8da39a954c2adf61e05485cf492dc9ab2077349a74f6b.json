{"ast":null,"code":"import * as THREE from 'three';\nimport { inferOpositeAxis } from '../test/vectorutils';\nexport class ThreeDObject {\n  constructor(id, position, size, content, sides = {\n    front: new THREE.Vector3(0, 0, 1),\n    right: new THREE.Vector3(1, 0, 0),\n    top: new THREE.Vector3(0, 1, 0)\n  }, url) {\n    this.orientation = {\n      front: new THREE.Vector3(0, 0, 1),\n      back: new THREE.Vector3(0, 0, -1),\n      left: new THREE.Vector3(-1, 0, 0),\n      right: new THREE.Vector3(1, 0, 0),\n      top: new THREE.Vector3(0, 1, 0),\n      bottom: new THREE.Vector3(0, -1, 0)\n    };\n    const back = inferOpositeAxis(sides.front);\n    const left = inferOpositeAxis(sides.right);\n    const bottom = inferOpositeAxis(sides.top);\n    this.size = size;\n    this.initialOrientation = {\n      front: sides.front,\n      back: back,\n      left: left,\n      right: sides.right,\n      top: sides.top,\n      bottom: bottom\n    };\n    this.id = id;\n    this.url = url;\n    this.x = position.x;\n    this.y = position.y;\n    this.z = position.z;\n    this.content = content;\n  }\n  fixOrientation() {\n    if (this.content === undefined) {\n      throw new Error('Content is not defined. Cannot fix orientation.');\n      return;\n    }\n    if (!this.initialOrientation.top) {\n      throw new Error('Top vector is not defined.');\n      return;\n    }\n    const currentUp = new THREE.Vector3(0, 1, 0); // Default up vector in THREE.js\n    const up = this.initialOrientation.top.clone().normalize();\n    this.rotateWithQuaternion(new THREE.Quaternion(), currentUp, up);\n    // now the front.\n    const currentFront = new THREE.Vector3(0, 0, 1);\n    const front = this.initialOrientation.front.clone().normalize();\n    this.rotateWithQuaternion(new THREE.Quaternion(), currentFront, front);\n  }\n  rotate(x_axis) {\n    // 1. change the sides values.\n    const front = this.initialOrientation.front.clone();\n    if (x_axis === 1) {\n      this.initialOrientation.front.cross(new THREE.Vector3(0, 1, 0));\n    }\n    const quaternion = new THREE.Quaternion();\n    quaternion.setFromUnitVectors(front, this.initialOrientation.front);\n    this.content.applyQuaternion(quaternion);\n  }\n  resize() {\n    // Get the current bounding box of the object to determine its current size\n    const boundingBox = new THREE.Box3().setFromObject(this.content);\n    const currentSize = new THREE.Vector3();\n    boundingBox.getSize(currentSize); // Get the current width, height, and depth of the object\n    //Calculate the scale factors to resize the object\n    const scaleFactors = new THREE.Vector3(this.size.width / currentSize.x, this.size.height / currentSize.y, this.size.depth / currentSize.z);\n    // Apply the calculated scale factors to resize the object\n    this.content.scale.set(scaleFactors.x, scaleFactors.y, scaleFactors.z);\n  }\n  move(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n  clone() {\n    return new ThreeDObject(this.id, {\n      x: this.x,\n      y: this.y,\n      z: this.z\n    }, this.size, this.content.clone(), this.initialOrientation, this.url);\n  }\n  rotateWithQuaternion(Quaternion, from, to) {\n    const quaternion = new THREE.Quaternion();\n    quaternion.setFromUnitVectors(from, to);\n    this.content.applyQuaternion(Quaternion);\n  }\n}","map":{"version":3,"names":["THREE","inferOpositeAxis","ThreeDObject","constructor","id","position","size","content","sides","front","Vector3","right","top","url","orientation","back","left","bottom","initialOrientation","x","y","z","fixOrientation","undefined","Error","currentUp","up","clone","normalize","rotateWithQuaternion","Quaternion","currentFront","rotate","x_axis","cross","quaternion","setFromUnitVectors","applyQuaternion","resize","boundingBox","Box3","setFromObject","currentSize","getSize","scaleFactors","width","height","depth","scale","set","move","from","to"],"sources":["C:\\Users\\v-zacharyhe\\Documents\\GitHub\\eventhub\\frontend\\src\\app\\models\\threeobject.model.ts"],"sourcesContent":["import * as THREE from 'three';\r\nimport { Position } from '../test/3dtypes';\r\nimport { AxisOrientation, Size } from '../test/3dobjects';\r\nimport { inferOpositeAxis } from '../test/vectorutils';\r\nimport { constant } from 'lodash';\r\nimport { Asset, Orientation } from '../interfaces';\r\n\r\nexport class ThreeDObject implements Asset {\r\n    id: number; \r\n    url: string | undefined;\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    content: THREE.Object3D;\r\n    initialOrientation: Orientation;\r\n    orientation: Orientation;\r\n    size: Size;\r\n\r\n    constructor(id: number, position: Position,\r\n            size: Size,\r\n            content: THREE.Object3D,\r\n            sides: AxisOrientation = {\r\n                front: new THREE.Vector3(0, 0, 1),\r\n                right: new THREE.Vector3(1, 0, 0),\r\n                top: new THREE.Vector3(0, 1, 0) },\r\n            url?: string) {\r\n        \r\n        this.orientation = {\r\n            front: new THREE.Vector3(0, 0, 1),\r\n            back: new THREE.Vector3(0, 0, -1),\r\n            left: new THREE.Vector3(-1, 0, 0),\r\n            right: new THREE.Vector3(1, 0, 0),\r\n            top: new THREE.Vector3(0, 1, 0),\r\n            bottom: new THREE.Vector3(0, -1, 0)\r\n        };\r\n        \r\n        const back = inferOpositeAxis(sides.front);\r\n        const left = inferOpositeAxis(sides.right);\r\n        const bottom = inferOpositeAxis(sides.top);\r\n        this.size = size;\r\n        this.initialOrientation = {\r\n            front: sides.front,\r\n            back: back,\r\n            left: left,\r\n            right: sides.right,\r\n            top: sides.top,\r\n            bottom: bottom\r\n        };\r\n        this.id = id;\r\n        this.url = url;\r\n        this.x = position.x;\r\n        this.y = position.y;\r\n        this.z = position.z;\r\n\r\n        this.content = content;\r\n    }\r\n\r\n    public fixOrientation() {\r\n\r\n        if (this.content === undefined) {\r\n            throw new Error('Content is not defined. Cannot fix orientation.');\r\n            return;\r\n        }\r\n\r\n        if (!this.initialOrientation.top) {\r\n            throw new Error('Top vector is not defined.');\r\n            return;\r\n        }\r\n\r\n        const currentUp = new THREE.Vector3(0, 1, 0); // Default up vector in THREE.js\r\n        const up = this.initialOrientation.top.clone().normalize();\r\n        this.rotateWithQuaternion(new THREE.Quaternion(), currentUp, up);\r\n\r\n        // now the front.\r\n        const currentFront = new THREE.Vector3(0, 0, 1);\r\n        const front = this.initialOrientation.front.clone().normalize();\r\n        this.rotateWithQuaternion(new THREE.Quaternion(), currentFront, front);\r\n        \r\n    }\r\n\r\n    rotate(x_axis: number) {\r\n        // 1. change the sides values.\r\n\r\n        const front = this.initialOrientation.front.clone();\r\n\r\n        if (x_axis === 1) {\r\n            this.initialOrientation.front.cross(new THREE.Vector3(0, 1, 0));\r\n        }\r\n\r\n        const quaternion = new THREE.Quaternion();\r\n        quaternion.setFromUnitVectors(front, this.initialOrientation.front);\r\n        this.content.applyQuaternion(quaternion);\r\n    }\r\n\r\n    public resize() {\r\n        // Get the current bounding box of the object to determine its current size\r\n        const boundingBox = new THREE.Box3().setFromObject(this.content);\r\n        const currentSize = new THREE.Vector3();\r\n        boundingBox.getSize(currentSize); // Get the current width, height, and depth of the object\r\n\r\n        //Calculate the scale factors to resize the object\r\n        const scaleFactors = new THREE.Vector3(\r\n            this.size.width / currentSize.x,\r\n            this.size.height / currentSize.y,\r\n            this.size.depth / currentSize.z\r\n        );\r\n\r\n        // Apply the calculated scale factors to resize the object\r\n\r\n        this.content.scale.set(scaleFactors.x, scaleFactors.y, scaleFactors.z);\r\n    }\r\n\r\n    public move(x: number, y: number, z: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    public clone(): Asset {\r\n        return new ThreeDObject(this.id, { x: this.x, y: this.y, z: this.z }, this.size, this.content.clone(), this.initialOrientation, this.url);\r\n    }\r\n\r\n    private rotateWithQuaternion(Quaternion: THREE.Quaternion, from: THREE.Vector3, to: THREE.Vector3) {\r\n        const quaternion = new THREE.Quaternion();\r\n        quaternion.setFromUnitVectors(from, to);\r\n        this.content.applyQuaternion(Quaternion);\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}