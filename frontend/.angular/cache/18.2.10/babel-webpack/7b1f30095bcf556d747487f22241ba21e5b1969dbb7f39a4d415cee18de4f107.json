{"ast":null,"code":"import { inject, signal } from '@angular/core';\nimport { BaseService } from '../base-service';\nimport { AlertService } from '../alert.service';\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ModelService extends BaseService {\n  constructor() {\n    super(...arguments);\n    this.source = 'models';\n    this.modelListSignal = signal([]);\n    this.modelImgListSignal = signal([]);\n    this.alertService = inject(AlertService);\n    this.search = {\n      page: 1,\n      size: 5\n    };\n    this.totalItems = [];\n  }\n  get models$() {\n    return this.modelListSignal;\n  }\n  get modelImgs$() {\n    return this.modelImgListSignal;\n  }\n  getAll() {\n    this.findAllWithParams({\n      page: this.search.page,\n      size: this.search.size\n    }).subscribe({\n      next: response => {\n        this.search = {\n          ...this.search,\n          ...response.meta\n        };\n        this.totalItems = Array.from({\n          length: this.search.totalPages ? this.search.totalPages : 0\n        }, (_, i) => i + 1);\n        this.modelListSignal.set(response.data);\n        // Array of observables for each image\n        const imageRequests = response.data.map(model => this.getImg(model.modelImgPath));\n        // Wait until all image requests are complete\n        forkJoin(imageRequests).subscribe({\n          next: imgBlobs => {\n            const blobs = imgBlobs;\n            this.modelImgListSignal.set(blobs);\n          },\n          error: err => {\n            console.error('Error loading images', err);\n          }\n        });\n        return response.data;\n      },\n      error: err => {\n        console.error('error', err);\n      }\n    });\n  }\n  getAllByUser() {\n    this.findAllWithParamsAndCustomSource(`models`, {\n      page: this.search.page,\n      size: this.search.size\n    }).subscribe({\n      next: response => {\n        this.search = {\n          ...this.search,\n          ...response.meta\n        };\n        this.totalItems = Array.from({\n          length: this.search.totalPages ? this.search.totalPages : 0\n        }, (_, i) => i + 1);\n        this.modelListSignal.set(response.data);\n      },\n      error: err => {\n        console.error('error', err);\n      }\n    });\n  }\n  getImg(filename) {\n    return this.http.get(`${this.source}/files/img/${filename}`, {\n      responseType: 'blob'\n    });\n  }\n  save(model) {\n    this.add(model).subscribe({\n      next: response => {\n        this.alertService.displayAlert('success', response.message, 'center', 'top', ['success-snackbar']);\n        console.log('success', response.message);\n        this.getAll();\n      },\n      error: err => {\n        //this.alertService.displayAlert('error', 'An error occurred adding the model', 'center', 'top', ['error-snackbar']);\n        console.error('error', err);\n      }\n    });\n  }\n  update(model) {\n    this.editCustomSource(`${model.id}`, model).subscribe({\n      next: response => {\n        //this.alertService.displayAlert('success', response.message, 'center', 'top', ['success-snackbar']);\n        console.log('success', response.message);\n        this.getAll();\n      },\n      error: err => {\n        //this.alertService.displayAlert('error', 'An error occurred updating the model', 'center', 'top', ['error-snackbar']);\n        console.log('error', err);\n        console.error('error', err);\n      }\n    });\n  }\n  delete(model) {\n    this.delCustomSource(`${model.id}`).subscribe({\n      next: response => {\n        //this.alertService.displayAlert('success', response.message, 'center', 'top', ['success-snackbar']);\n        console.log('success', response.message);\n        this.getAll();\n      },\n      error: err => {\n        //this.alertService.displayAlert('error', 'An error occurred deleting the model', 'center', 'top', ['error-snackbar']);\n        console.log('error', err);\n        console.error('error', err);\n      }\n    });\n  }\n  static {\n    this.ɵfac = /*@__PURE__*/(() => {\n      let ɵModelService_BaseFactory;\n      return function ModelService_Factory(__ngFactoryType__) {\n        return (ɵModelService_BaseFactory || (ɵModelService_BaseFactory = i0.ɵɵgetInheritedFactory(ModelService)))(__ngFactoryType__ || ModelService);\n      };\n    })();\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ModelService,\n      factory: ModelService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["inject","signal","BaseService","AlertService","forkJoin","ModelService","constructor","source","modelListSignal","modelImgListSignal","alertService","search","page","size","totalItems","models$","modelImgs$","getAll","findAllWithParams","subscribe","next","response","meta","Array","from","length","totalPages","_","i","set","data","imageRequests","map","model","getImg","modelImgPath","imgBlobs","blobs","error","err","console","getAllByUser","findAllWithParamsAndCustomSource","filename","http","get","responseType","save","add","displayAlert","message","log","update","editCustomSource","id","delete","delCustomSource","__ngFactoryType__","factory","ɵfac","providedIn"],"sources":["C:\\Users\\v-zacharyhe\\Documents\\GitHub\\eventhub\\frontend\\src\\app\\services\\model\\model.service.ts"],"sourcesContent":["import { inject, Injectable, signal } from '@angular/core';\r\nimport { Asset, AssetModel, ISearch } from '../../interfaces';\r\nimport { BaseService } from '../base-service';\r\nimport { AlertService } from '../alert.service';\r\nimport { AuthService } from '../auth.service';\r\nimport { Observable, forkJoin } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModelService extends BaseService<AssetModel> {\r\n  protected override source: string = 'models';\r\n  private modelListSignal = signal<AssetModel[]>([]);\r\n  private modelImgListSignal = signal<Blob[]>([]);\r\n  public alertService: AlertService = inject(AlertService);\r\n  get models$() {\r\n    return this.modelListSignal;\r\n  }\r\n  get modelImgs$() {\r\n    return this.modelImgListSignal;\r\n  }\r\n  public search: ISearch = {\r\n    page: 1,\r\n    size: 5\r\n  }\r\n  public totalItems: any = [];\r\n\r\n\r\n  getAll() {\r\n    this.findAllWithParams({ page: this.search.page, size: this.search.size }).subscribe({\r\n      next: (response: any) => {\r\n        this.search = { ...this.search, ...response.meta };\r\n        this.totalItems = Array.from(\r\n          { length: this.search.totalPages ? this.search.totalPages : 0 },\r\n          (_, i) => i + 1\r\n        );\r\n        this.modelListSignal.set(response.data);\r\n  \r\n        // Array of observables for each image\r\n        const imageRequests = response.data.map((model: AssetModel) =>\r\n          this.getImg(model.modelImgPath)\r\n        );\r\n  \r\n        // Wait until all image requests are complete\r\n        forkJoin(imageRequests).subscribe({\r\n          next: (imgBlobs: unknown) => {\r\n            const blobs = imgBlobs as Blob[];\r\n            this.modelImgListSignal.set(blobs);\r\n          },\r\n          error: (err: any) => {\r\n            console.error('Error loading images', err);\r\n          }\r\n        });\r\n  \r\n        return response.data;\r\n      },\r\n      error: (err: any) => {\r\n        console.error('error', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllByUser() {\r\n    this.findAllWithParamsAndCustomSource(`models`, { page: this.search.page, size: this.search.size }).subscribe({\r\n      next: (response: any) => {\r\n        this.search = {...this.search, ...response.meta};\r\n        this.totalItems = Array.from({length: this.search.totalPages ? this.search.totalPages : 0}, (_, i) => i + 1);\r\n        this.modelListSignal.set(response.data);\r\n      },\r\n      error: (err: any) => {\r\n        console.error('error', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  getImg(filename: string): Observable<Blob> {\r\n    return this.http.get(`${this.source}/files/img/${filename}`, { responseType: 'blob' });\r\n  }\r\n\r\n  save(model: AssetModel) {\r\n    this.add(model).subscribe({\r\n      next: (response: any) => {\r\n        this.alertService.displayAlert('success', response.message, 'center', 'top', ['success-snackbar']);\r\n        console.log('success', response.message);\r\n        this.getAll();\r\n      },\r\n      error: (err: any) => {\r\n        //this.alertService.displayAlert('error', 'An error occurred adding the model', 'center', 'top', ['error-snackbar']);\r\n        console.error('error', err);\r\n      }\r\n    });\r\n  }\r\n  \r\n  update(model: AssetModel) {\r\n    this.editCustomSource(`${model.id}`, model).subscribe({\r\n      next: (response: any) => {\r\n        //this.alertService.displayAlert('success', response.message, 'center', 'top', ['success-snackbar']);\r\n        console.log('success', response.message);\r\n        this.getAll();\r\n      },\r\n      error: (err: any) => {\r\n        //this.alertService.displayAlert('error', 'An error occurred updating the model', 'center', 'top', ['error-snackbar']);\r\n        console.log('error', err);\r\n        console.error('error', err);\r\n      }\r\n    });\r\n  }\r\n  \r\n  delete(model: AssetModel) {\r\n    this.delCustomSource(`${model.id}`).subscribe({\r\n      next: (response: any) => {\r\n        //this.alertService.displayAlert('success', response.message, 'center', 'top', ['success-snackbar']);\r\n        console.log('success', response.message);\r\n        this.getAll();\r\n      },\r\n      error: (err: any) => {\r\n        //this.alertService.displayAlert('error', 'An error occurred deleting the model', 'center', 'top', ['error-snackbar']);\r\n        console.log('error', err);\r\n        console.error('error', err);\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}